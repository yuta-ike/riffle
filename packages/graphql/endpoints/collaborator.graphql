extend type Query {
  getInviteCode(bookId: ID!): String!
}

extend type Mutation {
  postInvited(bookId: ID!, input: PostInvitedInput!): Void
  postRequest(bookId: ID!, input: PostRequestInput!): Void
  postApprove(collaboratorId: ID!, input: PostApproveInput!): Void
  putPreference(collaboratorId: ID!, input: PutPreferenceInput!): Collaborator!
  deleteCollaborator(collaboratorId: ID!, input: DeleteCollaborator!): Void
}

input PostInvitedInput {
  id: ID!
  accept: Boolean!
}

input PostRequestInput {
  id: ID!
}

input PutPreferenceInput {
  id: ID!
  collaboratorId: ID!
  role: Role!
}

input DeleteCollaborator {
  id: ID!
  collaboratorId: ID!
  hardDelete: Boolean!
}

input PostApproveInput {
  id: ID!
  collaboratorId: ID!
  approve: Boolean!
}
